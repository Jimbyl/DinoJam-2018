[gd_scene load_steps=33 format=2]

[ext_resource path="res://Swimming.gd" type="Script" id=1]
[ext_resource path="res://Sprites/Player/charhatscuba/Charhatscuba1.png" type="Texture" id=2]
[ext_resource path="res://Sprites/Player/charhatscuba/Charhatscuba3.png" type="Texture" id=3]
[ext_resource path="res://Sprites/Player/charhatscuba/Charhatscuba4.png" type="Texture" id=4]
[ext_resource path="res://Sprites/Player/charhatscuba/Charhatscuba5.png" type="Texture" id=5]
[ext_resource path="res://Sprites/Player/charhatscuba/Charhatscuba6.png" type="Texture" id=6]
[ext_resource path="res://Sprites/Player/charhatscuba/Charhatscuba2.png" type="Texture" id=7]
[ext_resource path="res://Sprites/Player/charhatscuba/Charhatscuba7.png" type="Texture" id=8]
[ext_resource path="res://Sprites/Player/charhatscuba/Charhatscuba8.png" type="Texture" id=9]
[ext_resource path="res://AnimatedSprite.gd" type="Script" id=10]
[ext_resource path="res://Music/Diving.ogg" type="AudioStream" id=11]
[ext_resource path="res://Sound Effects/Water Interaction/jump in water.ogg" type="AudioStream" id=12]
[ext_resource path="res://Sound Effects/Water Interaction/get out.ogg" type="AudioStream" id=13]
[ext_resource path="res://Sound Effects/GunshotRifle_BW.57683.ogg" type="AudioStream" id=14]
[ext_resource path="res://Sound Effects/Water Interaction/stroke.ogg" type="AudioStream" id=15]
[ext_resource path="res://Sprites/Decor/Radio.png" type="Texture" id=16]
[ext_resource path="res://Music/ontheboat.ogg" type="AudioStream" id=17]
[ext_resource path="res://Sprites/Particles/note.png" type="Texture" id=18]
[ext_resource path="res://PopupInventory.gd" type="Script" id=19]
[ext_resource path="res://Sprites/Particles/bubble.png" type="Texture" id=20]
[ext_resource path="res://coin.tscn" type="PackedScene" id=21]
[ext_resource path="res://Map scenes/Maptest.tscn" type="PackedScene" id=22]
[ext_resource path="res://Database/DiveItems/CommonDrops/ItemWood.tscn" type="PackedScene" id=23]
[ext_resource path="res://Sprites/Ships/boat side.png" type="Texture" id=24]
[ext_resource path="res://Sprites/Ships/boat sidefore.png" type="Texture" id=25]

[sub_resource type="GDScript" id=1]

script/source = "extends KinematicBody2D
var motion = Vector2()
var normalVector = Vector2(0,-1)
var swimSpeed = 150
var jumpSpeed = -300
var maxVertSpeed = 400
var gravity = 6
var setGravity = 6
var friction = 5
var grounded = 0
var in_water = 0
var can_jump = 1

var health = 4
var breath = 100

var can_shoot = true
var timer = null
var bullet_delay = 0.3
var gun = false

const BULLET_SCENE = preload(\"res://Bullet.tscn\")
const SWORD_SCENE = preload(\"res://Sword.tscn\")

func _ready():
	timer = Timer.new()
	timer.set_one_shot(true)
	timer.set_wait_time(bullet_delay)
	timer.connect(\"timeout\", self, \"on_timeout_complete\")
	add_child(timer)
	get_node(\"SFX/Radio/AudioStreamPlayer2D\")._set_playing(true)
	
func on_timeout_complete():
	can_shoot = true

func _physics_process(delta):
	if health <= 0:
		get_tree().change_scene(\"res://game_over.tscn\")
	get_node(\"Camera2D/gui/ViewportContainer/TextureRect2/HBoxContainer/health\").set_text(str(health))
	get_node(\"Camera2D/gui/ViewportContainer/TextureRect2/HBoxContainer/breath\").set_text(str(breath))
	if in_water == 1:
		breath -= .1
		if breath <= 0:
			health -= 1
	if is_on_floor():
		grounded = 1
		gravity = 0 
		can_jump = 1
		print(\"GROUND\")
	elif !is_on_floor():
		grounded = 0
		gravity = setGravity
		print(\"NOTGROUNDED\")
	if is_on_ceiling(): #halt vertical momentum if you hit the ceiling
		motion.y = 0
	if grounded == 0: #bring to floor if you're not on the floor
		motion.y += gravity
	elif grounded == 1 :
		motion.y = setGravity
		if motion.x == 0:
			get_node(\"AnimatedSprite\").set_animation(\"Ground\")
		elif Input.is_action_pressed('ui_right'):
			get_node(\"AnimatedSprite\").set_animation(\"Walk\")
		elif Input.is_action_pressed('ui_left'):
			get_node(\"AnimatedSprite\").set_animation(\"Walk\")
	if motion.y > gravity and grounded == 0 and in_water == 1:
		get_node(\"AnimatedSprite\").set_animation(\"Swim\")
		print(\"FALLING\")
	if Input.is_action_just_pressed('ui_up') and can_jump == 1 :#swim up
		get_node(\"AnimatedSprite\").set_frame(0) #reset swim stroke on up input
		if in_water == 1:
			get_node(\"SFX/Stroke\")._set_playing(true)
		if in_water == 0: #out of water, never do the stroke animation on jump
			get_node(\"AnimatedSprite\").set_animation(\"Jump\")
		elif grounded == 1:#set sprite to jump if on floor or to swim if not
			get_node(\"AnimatedSprite\").set_animation(\"Jump\")
		elif grounded == 0:
			get_node(\"AnimatedSprite\").set_animation(\"Stroke\")
		if in_water == 0:
			can_jump = 0
		motion.y = min(motion.y, 0) #reset vertical momentum if you're falling
		motion.y += jumpSpeed
	if Input.is_action_pressed('ui_right'): #swim left and right
		motion.x = swimSpeed
		get_node(\"AnimatedSprite\").set_flip_h(false)
	elif Input.is_action_pressed('ui_left'):
		get_node(\"AnimatedSprite\").set_flip_h(true)
		motion.x = -swimSpeed
	else:
		motion.x -= sign(motion.x)*friction
		#if abs(motion.x) <friction:
			#motion.x = 0
	
	if abs(motion.y) > maxVertSpeed:
		motion.y = sign(motion.y)*maxVertSpeed
	print (motion , setGravity)
	move_and_slide(motion,normalVector,5,4,.8)
	var player = get_node(\"Position2D\").get_global_position()	#discern between water and air
	if player.y <= 0:
		swimSpeed = 300
		jumpSpeed = -1000
		maxVertSpeed = 600
		setGravity = 12
		friction = 10
		grounded = 0
		breath = 100
		if in_water == 1:
			get_node(\"SFX/Radio/AudioStreamPlayer2D\")._set_playing(true)
			get_node(\"SFX/Exit Water\")._set_playing(true)
			get_node(\"SFX/Shoot\").set_bus(\"Air\")
			get_node(\"SFX/Music\")._set_playing(false)
		in_water = 0
	elif player.y > 0:
		swimSpeed = 150
		jumpSpeed = -300
		maxVertSpeed = 400
		setGravity = 6
		friction = 5
		grounded = 0
		can_jump = 1
		if in_water == 0:
			get_node(\"SFX/Radio/AudioStreamPlayer2D\")._set_playing(false)
			get_node(\"SFX/Enter Water\")._set_playing(true)
			get_node(\"SFX/Shoot\").set_bus(\"Underwater\")
			get_node(\"SFX/Music\")._set_playing(true)
			get_node(\"waterpart\").set_emitting(true)
		in_water = 1
	
	if (Input.is_action_just_pressed(\"ui_accept\") and can_shoot):
		if(gun):
			create_bullet()
		else:
			create_sword()
		can_shoot = false
		timer.start()
		get_node(\"SFX/Shoot\").playing = true
	if Global_Player.inventory_checkItem(1)==true:
		print (\"haswood\")

func create_bullet():
		var bullet = BULLET_SCENE.instance()
		get_parent().add_child(bullet)
		if !get_node(\"AnimatedSprite\").flip_h:
			bullet.set_position(get_node(\"Position2D\").get_global_position())
		else:
			var bulletPosition = get_node(\"Position2D\").get_global_position()
			bulletPosition.x -=60
			bullet.get_node(\"Sprite\").set_flip_h(true)
			bullet.set_position(bulletPosition)
			bullet.speed_x = -1
func create_sword():
		var sword = SWORD_SCENE.instance()
		get_parent().add_child(sword)
		if !get_node(\"AnimatedSprite\").flip_h:
			sword.set_position(get_node(\"Position2D\").get_global_position())
		else:
			var swordPosition = get_node(\"Position2D\").get_global_position()
			swordPosition.x -=60
			sword.get_node(\"Sprite\").set_flip_h(true)
			sword.set_position(swordPosition)
		"

[sub_resource type="SpriteFrames" id=2]

animations = [ {
"frames": [ ExtResource( 2 ), ExtResource( 3 ), ExtResource( 4 ), ExtResource( 5 ), ExtResource( 6 ) ],
"loop": false,
"name": "Stroke",
"speed": 10.0
}, {
"frames": [ ExtResource( 7 ) ],
"loop": true,
"name": "Ground",
"speed": 5.0
}, {
"frames": [ ExtResource( 2 ) ],
"loop": true,
"name": "Jump",
"speed": 5.0
}, {
"frames": [ ExtResource( 8 ) ],
"loop": true,
"name": "Float",
"speed": 5.0
}, {
"frames": [ ExtResource( 4 ), ExtResource( 5 ), ExtResource( 6 ), ExtResource( 8 ), ExtResource( 9 ) ],
"loop": true,
"name": "Swim",
"speed": 5.0
}, {
"frames": [ ExtResource( 2 ), ExtResource( 3 ), ExtResource( 4 ), ExtResource( 5 ), ExtResource( 6 ) ],
"loop": true,
"name": "Walk",
"speed": 5.0
} ]
_sections_unfolded = [ "Resource" ]

[sub_resource type="ParticlesMaterial" id=3]

render_priority = 0
trail_divisor = 1
emission_shape = 2
emission_box_extents = Vector3( 32, 10, 32 )
flag_align_y = false
flag_rotate_y = false
flag_disable_z = true
spread = 80.0
flatness = 0.0
gravity = Vector3( 0, -40, 0 )
initial_velocity = 0.0
initial_velocity_random = 0.0
angular_velocity = 0.0
angular_velocity_random = 0.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
linear_accel = 0.0
linear_accel_random = 0.0
radial_accel = 0.0
radial_accel_random = 0.0
tangential_accel = 0.0
tangential_accel_random = 0.0
damping = 7.56
damping_random = 0.0
angle = 0.0
angle_random = 0.0
scale = 0.59
scale_random = 0.0
color = Color( 0.797009, 0.750015, 0.964844, 1 )
hue_variation = -1.0
hue_variation_random = 0.93
anim_speed = 0.0
anim_speed_random = 0.0
anim_offset = 0.0
anim_offset_random = 0.0
anim_loop = false
_sections_unfolded = [ "Color", "Emission Shape", "Gravity", "Hue Variation", "Initial Velocity", "Orbit Velocity", "Spread" ]

[sub_resource type="RectangleShape2D" id=4]

custom_solver_bias = 0.0
extents = Vector2( 10.8974, 23 )

[sub_resource type="CircleShape2D" id=5]

custom_solver_bias = 0.0
radius = 10.0

[sub_resource type="ParticlesMaterial" id=6]

render_priority = 0
trail_divisor = 1
emission_shape = 1
emission_sphere_radius = 10.98
flag_align_y = false
flag_rotate_y = false
flag_disable_z = true
spread = 64.09
flatness = 0.0
gravity = Vector3( 0, -7, 0 )
initial_velocity = 23.1
initial_velocity_random = 0.0
angular_velocity = 0.0
angular_velocity_random = 0.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
linear_accel = 0.0
linear_accel_random = 0.0
radial_accel = 0.0
radial_accel_random = 0.0
tangential_accel = 0.0
tangential_accel_random = 0.0
damping = 0.0
damping_random = 0.0
angle = 0.0
angle_random = 0.0
scale = 0.96
scale_random = 0.89
color = Color( 1, 1, 1, 1 )
hue_variation = 0.0
hue_variation_random = 0.0
anim_speed = 0.0
anim_speed_random = 0.0
anim_offset = 0.0
anim_offset_random = 0.0
anim_loop = false
_sections_unfolded = [ "Angle", "Emission Shape", "Gravity", "Initial Velocity", "Scale", "Spread" ]

[sub_resource type="RectangleShape2D" id=7]

custom_solver_bias = 0.0
extents = Vector2( 10, 10 )

[node name="Swimming" type="Node" index="0"]

script = ExtResource( 1 )

[node name="Player" type="KinematicBody2D" parent="." index="0" groups=[
"SwimmingAI",
]]

position = Vector2( -109.401, -109.605 )
scale = Vector2( 1.25, 1.25 )
z_index = 2
input_pickable = false
collision_layer = 1
collision_mask = 7
collision/safe_margin = 0.08
script = SubResource( 1 )
_sections_unfolded = [ "Collision", "Transform", "Z Index" ]
__meta__ = {
"_edit_group_": true
}

[node name="AnimatedSprite" type="AnimatedSprite" parent="Player" index="0"]

scale = Vector2( 0.75, 0.75 )
frames = SubResource( 2 )
animation = "Float"
playing = true
script = ExtResource( 10 )
_sections_unfolded = [ "Transform", "Visibility", "Z Index" ]

[node name="SFX" type="Node" parent="Player" index="1"]

[node name="Music" type="AudioStreamPlayer" parent="Player/SFX" index="0"]

stream = ExtResource( 11 )
volume_db = -12.48
pitch_scale = 1.0
autoplay = false
mix_target = 0
bus = "Master"

[node name="Enter Water" type="AudioStreamPlayer" parent="Player/SFX" index="1"]

stream = ExtResource( 12 )
volume_db = -11.02
pitch_scale = 1.0
autoplay = false
mix_target = 0
bus = "Master"

[node name="Exit Water" type="AudioStreamPlayer" parent="Player/SFX" index="2"]

stream = ExtResource( 13 )
volume_db = -11.77
pitch_scale = 1.0
autoplay = false
mix_target = 0
bus = "Master"

[node name="Shoot" type="AudioStreamPlayer" parent="Player/SFX" index="3"]

stream = ExtResource( 14 )
volume_db = -13.56
pitch_scale = 1.0
autoplay = false
mix_target = 0
bus = "Master"

[node name="Stroke" type="AudioStreamPlayer" parent="Player/SFX" index="4"]

stream = ExtResource( 15 )
volume_db = 6.37
pitch_scale = 1.0
autoplay = false
mix_target = 0
bus = "Master"

[node name="Radio" type="Sprite" parent="Player/SFX" index="5"]

position = Vector2( 91.2681, -91.7314 )
z_index = 2
texture = ExtResource( 16 )
_sections_unfolded = [ "Z Index" ]
__meta__ = {
"_edit_group_": true
}

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="Player/SFX/Radio" index="0"]

stream = ExtResource( 17 )
volume_db = -1.0
pitch_scale = 1.0
autoplay = false
max_distance = 487.0
attenuation = 1.0
bus = "Radio"
area_mask = 1

[node name="Particles2D" type="Particles2D" parent="Player/SFX/Radio" index="1"]

emitting = true
amount = 3
lifetime = 2.15
one_shot = false
preprocess = 0.0
speed_scale = 1.0
explosiveness = 0.0
randomness = 0.0
fixed_fps = 0
fract_delta = true
visibility_rect = Rect2( -100, -100, 200, 200 )
local_coords = true
draw_order = 0
process_material = SubResource( 3 )
texture = ExtResource( 18 )
normal_map = null
h_frames = 1
v_frames = 1
_sections_unfolded = [ "Process Material", "Textures", "Time" ]

[node name="Camera2D" type="Camera2D" parent="Player" index="2"]

anchor_mode = 1
rotating = false
current = true
zoom = Vector2( 1, 1 )
limit_left = -10000000
limit_top = -10000000
limit_right = 10000000
limit_bottom = 10000000
limit_smoothed = false
drag_margin_h_enabled = true
drag_margin_v_enabled = true
smoothing_enabled = false
smoothing_speed = 5.0
offset_v = 0.0
offset_h = 0.0
drag_margin_left = 0.0
drag_margin_top = 0.0
drag_margin_right = 0.0
drag_margin_bottom = 0.0
editor_draw_screen = true
editor_draw_limits = false
editor_draw_drag_margin = false
_sections_unfolded = [ "Drag Margin", "Limit", "Smoothing" ]

[node name="gui" type="Control" parent="Player/Camera2D" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -406.0
margin_top = -239.0
margin_right = 345.0
margin_bottom = 175.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
_sections_unfolded = [ "Anchor", "Focus", "Grow Direction", "Hint", "Margin", "Rect" ]

[node name="HBoxContainer2" type="HBoxContainer" parent="Player/Camera2D/gui" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 34.0
margin_top = 41.0
margin_right = 283.0
margin_bottom = 81.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
alignment = 0
_sections_unfolded = [ "Margin" ]

[node name="b" type="Label" parent="Player/Camera2D/gui/HBoxContainer2" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 13.0
margin_right = 54.0
margin_bottom = 27.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 2
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 4
text = "BREATH:"
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="breath" type="Label" parent="Player/Camera2D/gui/HBoxContainer2" index="1"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 58.0
margin_top = 13.0
margin_right = 58.0
margin_bottom = 27.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 2
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 4
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="h" type="Label" parent="Player/Camera2D/gui/HBoxContainer2" index="2"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 62.0
margin_top = 13.0
margin_right = 116.0
margin_bottom = 27.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 2
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 4
text = "HEALTH:"
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="health" type="Label" parent="Player/Camera2D/gui/HBoxContainer2" index="3"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 120.0
margin_top = 13.0
margin_right = 120.0
margin_bottom = 27.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 2
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 4
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="HBoxContainer" type="HBoxContainer" parent="Player/Camera2D/gui" index="1"]

anchor_left = 1.0
anchor_top = 0.0
anchor_right = 1.0
anchor_bottom = 0.0
margin_left = -161.0
margin_top = 39.0
margin_right = -55.0
margin_bottom = 71.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
alignment = 2

[node name="money" type="Label" parent="Player/Camera2D/gui/HBoxContainer" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 51.0
margin_top = 9.0
margin_right = 102.0
margin_bottom = 23.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 2
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 4
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
text = "MONEY:"
align = 2
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1
_sections_unfolded = [ "custom_colors", "custom_constants" ]

[node name="money_count" type="Label" parent="Player/Camera2D/gui/HBoxContainer" index="1"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 106.0
margin_top = 9.0
margin_right = 106.0
margin_bottom = 23.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 2
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 4
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
align = 2
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1
_sections_unfolded = [ "custom_colors", "custom_constants" ]

[node name="Inventory" type="Node2D" parent="Player/Camera2D" index="1"]

z_index = 22
script = ExtResource( 19 )
_sections_unfolded = [ "Visibility", "Z Index" ]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Player" index="3"]

position = Vector2( 1, -6 )
shape = SubResource( 4 )
_sections_unfolded = [ "Transform" ]

[node name="CollisionShape2D2" type="CollisionShape2D" parent="Player" index="4"]

position = Vector2( 1, 23 )
shape = SubResource( 5 )
_sections_unfolded = [ "Transform" ]

[node name="Position2D" type="Position2D" parent="Player" index="5"]

position = Vector2( 30, 0 )
_sections_unfolded = [ "Transform" ]

[node name="Timer" type="Timer" parent="Player" index="6"]

process_mode = 1
wait_time = 1.0
one_shot = false
autostart = false

[node name="waterpart" type="Particles2D" parent="Player" index="7"]

position = Vector2( 2.15147, 29.6871 )
rotation = 1.55284
z_index = 3
emitting = false
amount = 20
lifetime = 6.0
one_shot = true
preprocess = 0.0
speed_scale = 1.0
explosiveness = 0.75
randomness = 0.0
fixed_fps = 0
fract_delta = true
visibility_rect = Rect2( -100, -100, 200, 200 )
local_coords = false
draw_order = 0
process_material = SubResource( 6 )
texture = ExtResource( 20 )
normal_map = null
h_frames = 1
v_frames = 1
_sections_unfolded = [ "Process Material", "Textures", "Time", "Z Index" ]

[node name="Coins" type="Node2D" parent="." index="1"]

position = Vector2( -504.701, -255.956 )
z_index = 1
_sections_unfolded = [ "Visibility", "Z Index" ]

[node name="coin2" parent="Coins" index="0" instance=ExtResource( 21 )]

position = Vector2( 353.798, 126.979 )

[node name="coin3" parent="Coins" index="1" instance=ExtResource( 21 )]

position = Vector2( 407.762, 132.564 )

[node name="coin4" parent="Coins" index="2" instance=ExtResource( 21 )]

position = Vector2( 481.797, 132.398 )

[node name="coin5" parent="Coins" index="3" instance=ExtResource( 21 )]

position = Vector2( 569.051, 133.83 )

[node name="coin6" parent="Coins" index="4" instance=ExtResource( 21 )]

position = Vector2( 636.259, 135.262 )

[node name="Map" parent="." index="2" instance=ExtResource( 22 )]

[node name="monster cage" type="StaticBody2D" parent="." index="3"]

position = Vector2( 510, -10 )
scale = Vector2( 4000.09, 0.1875 )
input_pickable = false
collision_layer = 8
collision_mask = 10
constant_linear_velocity = Vector2( 0, 0 )
constant_angular_velocity = 0.0
friction = 1.0
bounce = 0.0
_sections_unfolded = [ "Collision", "Transform" ]

[node name="CollisionShape2D" type="CollisionShape2D" parent="monster cage" index="0"]

position = Vector2( -0.22679, 20.1667 )
scale = Vector2( 3.1925, 2.55128 )
shape = SubResource( 7 )
_sections_unfolded = [ "Transform", "Z Index" ]

[node name="ItemWood" parent="." index="4" instance=ExtResource( 23 )]

position = Vector2( 122.095, -189.445 )
_sections_unfolded = [ "Transform", "Z Index" ]

[node name="Button" type="Button" parent="." index="5"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = -185.0
margin_top = -114.0
margin_right = -136.0
margin_bottom = -94.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
focus_mode = 2
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
toggle_mode = false
enabled_focus_mode = 2
shortcut = null
group = null
text = "Leave"
flat = false
align = 1

[node name="Boat" type="Node2D" parent="." index="6"]

editor/display_folded = true
position = Vector2( 0, -68 )
_sections_unfolded = [ "Transform", "Z Index" ]
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="Boat" index="0"]

texture = ExtResource( 24 )
_sections_unfolded = [ "Transform" ]
__meta__ = {
"_edit_group_": true
}

[node name="StaticBody2D" type="StaticBody2D" parent="Boat/Sprite" index="0"]

input_pickable = false
collision_layer = 1
collision_mask = 1
constant_linear_velocity = Vector2( 0, 0 )
constant_angular_velocity = 0.0
friction = 1.0
bounce = 0.0

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="Boat/Sprite/StaticBody2D" index="0"]

build_mode = 0
polygon = PoolVector2Array( -251.214, 0.479618, -240.149, 38.8989, -199.579, 75.1667, -147.329, 96.3741, 223.648, 96.3741, 235.327, 78.8549, 239.938, 50.5783, 239.938, 6.6267 )

[node name="Sprite" type="Sprite" parent="Boat/Sprite" index="1"]

z_index = 3
texture = ExtResource( 25 )
_sections_unfolded = [ "Z Index" ]

[connection signal="pressed" from="Button" to="." method="_on_Button_pressed"]


