[gd_scene load_steps=9 format=2]

[ext_resource path="res://Sprites/Mobs/Skeleton1.png" type="Texture" id=1]
[ext_resource path="res://Sprites/Mobs/Skeleton2.png" type="Texture" id=2]
[ext_resource path="res://Sprites/Mobs/Skeleton3.png" type="Texture" id=3]
[ext_resource path="res://Sprites/Mobs/Skeleton4.png" type="Texture" id=4]

[sub_resource type="ParticlesMaterial" id=1]

render_priority = 0
trail_divisor = 1
emission_shape = 0
flag_align_y = false
flag_rotate_y = false
flag_disable_z = true
spread = 180.0
flatness = 0.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 93.25
initial_velocity_random = 0.72
angular_velocity = 0.0
angular_velocity_random = 0.0
orbit_velocity = 0.0
orbit_velocity_random = 0.0
linear_accel = 0.0
linear_accel_random = 0.0
radial_accel = 0.0
radial_accel_random = 0.0
tangential_accel = 0.0
tangential_accel_random = 0.0
damping = 100.0
damping_random = 0.24
angle = 0.0
angle_random = 0.0
scale = 2.54
scale_random = 0.0
color = Color( 1, 1, 1, 1 )
hue_variation = 0.0
hue_variation_random = 0.0
anim_speed = 0.0
anim_speed_random = 0.0
anim_offset = 0.0
anim_offset_random = 0.0
anim_loop = false
_sections_unfolded = [ "Initial Velocity", "Scale", "Spread", "Trail" ]

[sub_resource type="GDScript" id=2]

script/source = "extends KinematicBody2D


onready var spriteNode = get_node(\"AnimatedSprite\")
var motion = Vector2()
var normalVec = Vector2(0,-1)
var gravity = 6
var speedMax = 100
var acc = 4
var health = 6
var knockback = 300

var can_attack = true
var timer = null
var i_frame = 2

func _ready():
	timer = Timer.new()
	timer.set_one_shot(true)
	timer.set_wait_time(i_frame)
	timer.connect(\"timeout\", self, \"on_timeout_complete\")
	add_child(timer)
func on_timeout_complete():
	can_attack = true

func _physics_process(delta):
	var player = get_tree().get_nodes_in_group(\"SwimmingAI\")[0]
	var angle = get_angle_to(player.global_position) + PI/2
	motion.x += sign(angle)*acc
	if motion.x >= speedMax:
		motion.x = speedMax
	spriteNode.set_flip_h(sign(angle) == 1)
	motion.y += gravity
	if(is_on_floor()):
		motion.y = 0
		spriteNode.playing = true
		if player.global_position.y+50 < global_position.y:
			motion.y = -300
	else:
		spriteNode.playing = false
	move_and_slide(motion, normalVec,5,4,.8)
	if(global_position.distance_to(player.position) < 60) and can_attack == true : #attack player
		can_attack = false
		timer.start()
		player.motion += polar2cartesian(knockback, angle)
		player.health -= 3
	
	
	
	if health < 1:
		get_parent().get_node(\"death\").set_emitting(true)
		queue_free()"

[sub_resource type="RectangleShape2D" id=3]

custom_solver_bias = 0.0
extents = Vector2( 22.6476, 40.6341 )

[sub_resource type="SpriteFrames" id=4]

animations = [ {
"frames": [ ExtResource( 1 ), ExtResource( 2 ), ExtResource( 3 ), ExtResource( 1 ), ExtResource( 4 ), ExtResource( 1 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[node name="Skelemans" type="Node2D"]

[node name="death" type="Particles2D" parent="." index="0"]

z_index = 2
emitting = false
amount = 30
lifetime = 0.5
one_shot = true
preprocess = 0.0
speed_scale = 1.0
explosiveness = 1.0
randomness = 0.0
fixed_fps = 0
fract_delta = true
visibility_rect = Rect2( -100, -100, 200, 200 )
local_coords = false
draw_order = 0
process_material = SubResource( 1 )
texture = null
normal_map = null
h_frames = 1
v_frames = 1
_sections_unfolded = [ "Drawing", "Process Material", "Time", "Z Index" ]

[node name="KinematicSkeleman" type="KinematicBody2D" parent="." index="1" groups=[
"SwimmingAI",
]]

input_pickable = false
collision_layer = 1
collision_mask = 1
collision/safe_margin = 0.08
script = SubResource( 2 )

[node name="Collision" type="CollisionShape2D" parent="KinematicSkeleman" index="0"]

position = Vector2( -2, 4 )
shape = SubResource( 3 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="KinematicSkeleman" index="1"]

z_index = 2
frames = SubResource( 4 )
animation = "default"
_sections_unfolded = [ "Z Index" ]


